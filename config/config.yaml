preprocessor:
  input_channel: 0
  target_channel: 0
  
train:
  learning_rate: 1e-3                                # Learning rate for opt: ['4e-3' for fine-tune, '4e-3' for regualr downstream task training]
  pretrain_epochs: 100                               # total steps for training, a step is a batch of update
  adapt_epochs: 10                                   # total steps for training, a step is a batch of update  
  batch_size: 32
  log_step: 50                                       # log training status every this amount of training steps
  eval_step: 500                                     # evaluate every this amount of training steps
  max_keep: 10                                       # maximum number of model ckpt to keep during training
  loss: sisdr                                        # Scale-Invariant Signal Distortion Ratio
  gradient_clipping: 1e-0                            # Maximum gradient norm
  lambda: 10
  strategies:
    ewc: 0.5
    si: 0.5
 
eval:
  batch_size: 32
  n_jobs: 2
  metrics: [pesq_nb, stoi]

dataset:
  train: 
    noisy:
      ['../train/noisy_T0', '../train/noisy_T1', '../train/noisy_T2', '../train/noisy_T3', '../train/noisy_T4']
    clean:
      ['../train/clean_T0', '../train/clean_T1', '../train/clean_T2', '../train/clean_T3', '../train/clean_T4']
  dev: 
    noisy:
      ['../dev/noisy_T0', '../dev/noisy_T1', '../dev/noisy_T2', '../dev/noisy_T3', '../dev/noisy_T4']
    clean:
      ['../dev/clean_T0', '../dev/clean_T1', '../dev/clean_T2', '../dev/clean_T3', '../dev/clean_T4']
  test: 
    noisy:
      ['../dev/noisy_T0', '../dev/noisy_T1', '../dev/noisy_T2', '../dev/noisy_T3', '../dev/noisy_T4']
    clean:
      ['../dev/clean_T0', '../dev/clean_T1', '../dev/clean_T2', '../dev/clean_T3', '../dev/clean_T4']
    
model:
  input_size: 257, 
  hidden_size: 257, 
  num_layers: 3, 
  bidirectional: False